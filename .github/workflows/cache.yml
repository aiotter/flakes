name: Build flake outputs and cache binaries on cachix

on:
  push:
    branches-ignore:
      - master

env:
  NIXPKGS_ALLOW_UNFREE: 1

jobs:
  cache:
    name: Build targets

    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - macos-latest  # X64-macOS
          - ubuntu-latest # X64-Linux
          - self-hosted   # ARM64-Linux

    outputs:
      X64-macOS: ${{ steps.output.outputs.X64-macOS }}
      X64-Linux: ${{ steps.output.outputs.X64-Linux }}
      ARM64-Linux: ${{ steps.output.outputs.ARM64-Linux }}

    runs-on: ${{ matrix.runs-on }}

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Check if the targets can be built
        run: nix build --dry-run ${{ inputs.targets }}
        id: check-buildable
        continue-on-error: true

      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: aiotter
          authToken: ${{ secrets.cachix-auth-token }}
        if: ${{ steps.check-buildable.outcome == 'success' }}

      - name: Build
        run: nix --log-lines 99999 build ${{ inputs.targets }}
        if: ${{ steps.check-buildable.outcome == 'success' }}

      # runner.arch is one of: [X86, X64, ARM, ARM64]
      # runner.os is one of: [Linux, Windows, macOS]
      - name: Set output (${{ runner.arch }}-${{ runner.os }})
        run: echo "${{ runner.arch }}-${{ runner.os }}=true" >>$GITHUB_OUTPUT
        id: output
        if: ${{ steps.check-buildable.outcome == 'success' }}

      - name: Create job summary
        run: |
          RESULT='${{ job.status == 'success' && '⭕️ Success' || '❌ Failure' }}'
          function create-list () {
            for i in "$@"; do
              echo '- `'$i'` '
            done
          }
          cat <<EOF >>$GITHUB_STEP_SUMMARY
          ## $(nix eval --expr builtins.currentSystem --impure --raw)
          ### ${RESULT}
          $(create-list ${{ inputs.targets }})
          EOF
        if: ${{ steps.check-buildable.outcome == 'success' && ( success() || failure() ) }}

  not-built:
    needs: cache
    if: ${{ !contains(needs.cache.outputs.*, 'true') }}
    runs-on: ubuntu-latest
    steps:
      - name: Output error
        run: echo "::error title=Not built::No target for any of the runners!"; false

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - run: nix flake check
